// Generated by view binder compiler. Do not edit!
package com.example.mobilesoftware_kangjihye.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.ToggleButton;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.drawerlayout.widget.DrawerLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager2.widget.ViewPager2;
import com.example.mobilesoftware_kangjihye.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityFeatureBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnFeatureGray;

  @NonNull
  public final Button btnFeatureHaru;

  @NonNull
  public final Button btnFeatureLife;

  @NonNull
  public final Button btnFeatureMono;

  @NonNull
  public final Button btnFeatureOldmoon;

  @NonNull
  public final Button btnFeaturePhotoism;

  @NonNull
  public final Button btnFeatureSigniture;

  @NonNull
  public final DrawerLayout featureDrawerLayout;

  @NonNull
  public final RelativeLayout featureDrawerMenu;

  @NonNull
  public final ToggleButton featureMenuToggle;

  @NonNull
  public final ViewPager2 featureViewpager2;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final ImageView locationMyPageButton;

  @NonNull
  public final ConstraintLayout parent;

  @NonNull
  public final ConstraintLayout topLayout;

  private ActivityFeatureBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnFeatureGray,
      @NonNull Button btnFeatureHaru, @NonNull Button btnFeatureLife,
      @NonNull Button btnFeatureMono, @NonNull Button btnFeatureOldmoon,
      @NonNull Button btnFeaturePhotoism, @NonNull Button btnFeatureSigniture,
      @NonNull DrawerLayout featureDrawerLayout, @NonNull RelativeLayout featureDrawerMenu,
      @NonNull ToggleButton featureMenuToggle, @NonNull ViewPager2 featureViewpager2,
      @NonNull LinearLayout linearLayout, @NonNull ImageView locationMyPageButton,
      @NonNull ConstraintLayout parent, @NonNull ConstraintLayout topLayout) {
    this.rootView = rootView;
    this.btnFeatureGray = btnFeatureGray;
    this.btnFeatureHaru = btnFeatureHaru;
    this.btnFeatureLife = btnFeatureLife;
    this.btnFeatureMono = btnFeatureMono;
    this.btnFeatureOldmoon = btnFeatureOldmoon;
    this.btnFeaturePhotoism = btnFeaturePhotoism;
    this.btnFeatureSigniture = btnFeatureSigniture;
    this.featureDrawerLayout = featureDrawerLayout;
    this.featureDrawerMenu = featureDrawerMenu;
    this.featureMenuToggle = featureMenuToggle;
    this.featureViewpager2 = featureViewpager2;
    this.linearLayout = linearLayout;
    this.locationMyPageButton = locationMyPageButton;
    this.parent = parent;
    this.topLayout = topLayout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityFeatureBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityFeatureBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_feature, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityFeatureBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_feature_gray;
      Button btnFeatureGray = ViewBindings.findChildViewById(rootView, id);
      if (btnFeatureGray == null) {
        break missingId;
      }

      id = R.id.btn_feature_haru;
      Button btnFeatureHaru = ViewBindings.findChildViewById(rootView, id);
      if (btnFeatureHaru == null) {
        break missingId;
      }

      id = R.id.btn_feature_life;
      Button btnFeatureLife = ViewBindings.findChildViewById(rootView, id);
      if (btnFeatureLife == null) {
        break missingId;
      }

      id = R.id.btn_feature_mono;
      Button btnFeatureMono = ViewBindings.findChildViewById(rootView, id);
      if (btnFeatureMono == null) {
        break missingId;
      }

      id = R.id.btn_feature_oldmoon;
      Button btnFeatureOldmoon = ViewBindings.findChildViewById(rootView, id);
      if (btnFeatureOldmoon == null) {
        break missingId;
      }

      id = R.id.btn_feature_photoism;
      Button btnFeaturePhotoism = ViewBindings.findChildViewById(rootView, id);
      if (btnFeaturePhotoism == null) {
        break missingId;
      }

      id = R.id.btn_feature_signiture;
      Button btnFeatureSigniture = ViewBindings.findChildViewById(rootView, id);
      if (btnFeatureSigniture == null) {
        break missingId;
      }

      id = R.id.feature_drawerLayout;
      DrawerLayout featureDrawerLayout = ViewBindings.findChildViewById(rootView, id);
      if (featureDrawerLayout == null) {
        break missingId;
      }

      id = R.id.feature_drawerMenu;
      RelativeLayout featureDrawerMenu = ViewBindings.findChildViewById(rootView, id);
      if (featureDrawerMenu == null) {
        break missingId;
      }

      id = R.id.feature_menuToggle;
      ToggleButton featureMenuToggle = ViewBindings.findChildViewById(rootView, id);
      if (featureMenuToggle == null) {
        break missingId;
      }

      id = R.id.feature_viewpager2;
      ViewPager2 featureViewpager2 = ViewBindings.findChildViewById(rootView, id);
      if (featureViewpager2 == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.location_myPageButton;
      ImageView locationMyPageButton = ViewBindings.findChildViewById(rootView, id);
      if (locationMyPageButton == null) {
        break missingId;
      }

      ConstraintLayout parent = (ConstraintLayout) rootView;

      id = R.id.top_layout;
      ConstraintLayout topLayout = ViewBindings.findChildViewById(rootView, id);
      if (topLayout == null) {
        break missingId;
      }

      return new ActivityFeatureBinding((ConstraintLayout) rootView, btnFeatureGray, btnFeatureHaru,
          btnFeatureLife, btnFeatureMono, btnFeatureOldmoon, btnFeaturePhotoism,
          btnFeatureSigniture, featureDrawerLayout, featureDrawerMenu, featureMenuToggle,
          featureViewpager2, linearLayout, locationMyPageButton, parent, topLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
